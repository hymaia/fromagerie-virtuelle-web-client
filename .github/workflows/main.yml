name: Node.js CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - run: sam build --use-container
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
      - name: Retrieve UserPoolId from Cloudformation 
        run: echo "REACT_APP_COGNITO_USER_POOL_ID=$(aws cloudformation --region eu-west-1 describe-stacks --stack-name fromagerie-virtuelle --query "Stacks[0].Outputs[?OutputKey=='UserPoolId'].OutputValue" --output text)" >> $GITHUB_ENV
      - name: Retrieve CognitoUserPoolId from Cloudformation 
        run: echo "REACT_APP_COGNITO_CLIENT_ID=$(aws cloudformation --region eu-west-1 describe-stacks --stack-name fromagerie-virtuelle --query "Stacks[0].Outputs[?OutputKey=='CognitoClientId'].OutputValue" --output text)" >> $GITHUB_ENV
      - name: Retrieve DistributionID from Cloudformation
        run: echo "CLOUDFRONT_DISTRIBUTION_ID=$(aws cloudformation --region eu-west-1 describe-stacks --stack-name fromagerie-virtuelle-webapp --query "Stacks[0].Outputs[?OutputKey=='FromagerieVirtuelleCloudFrontDistributionId'].OutputValue" --output text)" >> $GITHUB_ENV
      - name: Retrieve S3 Bucket name from Cloudformation
        run: echo "S3_BUCKET_ADDRESS=$(aws cloudformation --region eu-west-1 describe-stacks --stack-name fromagerie-virtuelle-webapp --query "Stacks[0].Outputs[?OutputKey=='FromagerieVirtuelleWebClientBucket'].OutputValue" --output text)" >> $GITHUB_ENV
      - run: npm ci
      - run: npm run build
      - run: npm run copy-to-s3
      - run: npm run invalidate-cloudfront
  
